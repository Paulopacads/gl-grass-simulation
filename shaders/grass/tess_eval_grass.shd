#version 450

layout (quads, equal_spacing, ccw) in;

uniform mat4 projection_matrix;
uniform mat4 model_view_matrix;

patch in CONTROL_OUT
{
  vec3 bezier_base1;
  vec3 bezier_base2;
  vec3 bezier_middle;
  vec3 bezier_end;
} control_out;

/**
 * @brief Calculer un point sur une courbe de Bézier
 * @param i Indice du point de contrôle (base gauche (0) ou droite(1))
 * @param step Étape de la courbe de Bézier
 * @return Point sur la courbe de Bézier
 */
vec3 Bezier(float step_, vec3 bezier_base, vec3 bezier_middle, vec3 bezier_end) {
    return bezier_base * (1 - step_) * (1 - step_)
         +  bezier_middle        * (1 - step_) * step_       * 2.0f
         +  bezier_end           * step_       * step_;
}

void main() {
    /*vec3 p;
    if (gl_TessCoord.y > 0.5)
        p = Bezier(gl_TessCoord.y, control_out.bezier_base2, control_out.bezier_middle, control_out.bezier_end);
    else
        p = Bezier(gl_TessCoord.y, control_out.bezier_base1, control_out.bezier_middle, control_out.bezier_end);
    
    gl_Position = projection_matrix * model_view_matrix * vec4(p, 1.0f);*/

 	vec4 p1 = mix(gl_in[0].gl_Position, gl_in[1].gl_Position, gl_TessCoord.x);
     vec4 p2 = mix(gl_in[3].gl_Position, gl_in[2].gl_Position, gl_TessCoord.x); 
     vec4 p = mix(p1, p2, gl_TessCoord.y);
 
     gl_Position = projection_matrix * model_view_matrix * p;
}

